{
    "version": "https://jsonfeed.org/version/1",
    "title": "Hexo",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2023/03/10/%E6%96%B0%E7%94%9F%E8%B5%9BWP%202022212800/",
            "url": "http://example.com/2023/03/10/%E6%96%B0%E7%94%9F%E8%B5%9BWP%202022212800/",
            "title": "",
            "date_published": "2023-03-10T09:09:50.130Z",
            "content_html": "<h3 id=\"crypto\"><a class=\"markdownIt-Anchor\" href=\"#crypto\">#</a> crypto</h3>\n<p>来自红岩的密文 1</p>\n<p><img src=\"C:%5CUsers%5CLenovo%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221120230431679.png\" alt=\"image-20221120230431679\"></p>\n<p>看到每一个部分都有 &amp;#… 推测每一部分都是数字对应着一个字母，再联系到大一的学习内容，猜测应该是 ASCII 码，将其对应后得出答案 redrock {Welc0me_T0_The_CTF_0f_redR0ck!!!}<img src=\"C:%5CUsers%5CLenovo%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221120231744225.png\" alt=\"image-20221120231744225\"></p>\n<p>你可以一个一个对应过去也可以在 word 里替换一部分其他字符，写一个 C 程序（活学活用了属于是）（捂脸）</p>\n<p>来自红岩的密文 2</p>\n<p><img src=\"C:%5CUsers%5CLenovo%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221120232502039.png\" alt=\"image-20221120232502039\"></p>\n<p>打开后有点蒙蔽，不过幸好之前参加了信协的宣讲，，密码学给我留下的印象有个 base 的加密方式，下来后我试了一下发现 base100 的加密下可以将密码弄成表情包，试了一下解码</p>\n<p>，得到<img src=\"C:%5CUsers%5CLenovo%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221120233640291.png\" alt=\"image-20221120233640291\"></p>\n<p>感觉不够明显继续试了试 64 和 32 （没想到真的试出来了！）</p>\n<p><img src=\"C:%5CUsers%5CLenovo%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221120233823825.png\" alt=\"image-20221120233823825\"></p>\n<p><img src=\"C:%5CUsers%5CLenovo%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221120233835534.png\" alt=\"image-20221120233835534\"></p>\n<p>你干嘛</p>\n<p><img src=\"C:%5CUsers%5CLenovo%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221120234704178.png\" alt=\"image-20221120234704178\"></p>\n<p>打开才发现，满屏写着三个字，小黑子！！！！！</p>\n<p>既然知道是密码学，就在 CSDN 上搜 CTF 常用加密方式</p>\n<p>逛了好长时间… 找到了个相似的 Ook 加密，而且也有相似的？！和。试了一下不行，发现标点符号</p>\n<p>是中文的，改成英文后直接解码</p>\n<p>得到<img src=\"C:%5CUsers%5CLenovo%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221121000000994.png\" alt=\"image-20221121000000994\"></p>\n<p>这一串… 蒙的感觉更厉害了，直接搜一下再说</p>\n<p>找到了！！！开森！！</p>\n<p><img src=\"C:%5CUsers%5CLenovo%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221121000623853.png\" alt=\"image-20221121000623853\"></p>\n<p>然后得到了一个很好康的图片… 啊不，是找到了正确的解码方式</p>\n<p><img src=\"C:%5CUsers%5CLenovo%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221121000727409.png\" alt=\"image-20221121000727409\"></p>\n<p>兽音解密！！</p>\n<p>得到了 redrock</p>\n<p><img src=\"C:%5CUsers%5CLenovo%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221121000928769.png\" alt=\"image-20221121000928769\"></p>\n<p>（写 WP 好累…）</p>\n<p>A 和 B</p>\n<p>我终于等到了我在《从 0 到 1》上看到过的加密类型了培根密码弄出来是 r {zeyydyyrzzoyzczykz} 提交显示不对，感觉还有其他加密类型，没法子… 只能再看看其他加密类型了，试到了栅栏密码，点到每组字数 3 后到加密得到 redrock 运气真好…</p>\n<p>可惜我年轻无知</p>\n<p>第一眼狂喜！！！凯撒大帝眷恋我了吗，结果换到第三位就傻了，只能换个思路</p>\n<p>去 BUUCTF 上找找灵感<img src=\"C:%5CUsers%5CLenovo%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221121003905445.png\" alt=\"image-20221121003905445\"></p>\n<p>找到了这个凯撒？替换？呵呵！1</p>\n<p>感觉这一部分和凯撒很像但又不完全一样和凯撒？替换？呵呵！1 口吻一样就去 CSDN 上查了一下这个凯撒？替换？呵呵！1 找到了 quipquip 解法，顺利拿到 redrock, 提交拿分</p>\n<p><img src=\"C:%5CUsers%5CLenovo%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221121004428305.png\" alt=\"image-20221121004428305\"></p>\n<h3 id=\"reverse\"><a class=\"markdownIt-Anchor\" href=\"#reverse\">#</a> Reverse</h3>\n<h2 id=\"just_re_it和赛博顶针直接用ida逆向再shiftf12打开字符串窗口得到redrock\"><a class=\"markdownIt-Anchor\" href=\"#just_re_it和赛博顶针直接用ida逆向再shiftf12打开字符串窗口得到redrock\">#</a> just_re_it 和赛博顶针，直接用 IDA 逆向再 shift+f12 打开字符串窗口得到 redrock</h2>\n<p><img src=\"C:%5CUsers%5CLenovo%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221121085214093.png\" alt=\"image-20221121085214093\"></p>\n<p><img src=\"C:%5CUsers%5CLenovo%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221121085423932.png\" alt=\"image-20221121085423932\"></p>\n<h2 id=\"水水爱听歌\"><a class=\"markdownIt-Anchor\" href=\"#水水爱听歌\">#</a> 水水爱听歌</h2>\n<p>打开后发现后缀名是.pyc</p>\n<p><img src=\"C:%5CUsers%5CLenovo%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221121090356282.png\" alt=\"image-20221121090356282\"></p>\n<p>觉得.pyc 和 py 有点关系我感觉是不是可以把.pyc 换成 py</p>\n<p><img src=\"C:%5CUsers%5CLenovo%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221121090632065.png\" alt=\"image-20221121090632065\"></p>\n<p>看到这就感觉我找对了</p>\n<p><img src=\"C:%5CUsers%5CLenovo%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221121091018388.png\" alt=\"image-20221121091018388\"></p>\n<p>得到了一个 py 文件先把它放到 pycharm 里</p>\n<p><img src=\"C:%5CUsers%5CLenovo%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221121091159352.png\" alt=\"image-20221121091159352\"></p>\n<p>运行一下发现要输入一个东西</p>\n<p><img src=\"C:%5CUsers%5CLenovo%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221121091237264.png\" alt=\"image-20221121091237264\"></p>\n<p>这里的 if 语句很令人着迷</p>\n<p><img src=\"C:%5CUsers%5CLenovo%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221121091413120.png\" alt=\"image-20221121091413120\"></p>\n<p>base64…</p>\n<p>尝试着把上面 zzz 里的进行 base64 解码后得到 She_bid_me_to_take_love_easy_as_the_leaves_grow_on_the_tree</p>\n<p>输入后得到 redrock</p>\n<p><img src=\"C:%5CUsers%5CLenovo%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221121091611564.png\" alt=\"image-20221121091611564\"></p>\n<h3 id=\"misc\"><a class=\"markdownIt-Anchor\" href=\"#misc\">#</a> misc</h3>\n<p>签到</p>\n<p>关注公众号，得到 redrock</p>\n<p>流量审计</p>\n<p>让我感到对不起出题人的一个题来了…（捂脸）</p>\n<p><img src=\"C:%5CUsers%5CLenovo%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221121093055491.png\" alt=\"image-20221121093055491\"></p>\n<p>拿 ty 打开后直接找到了 redrock（捂脸）</p>\n<p>啵啵的魔法药水</p>\n<p><img src=\"C:%5CUsers%5CLenovo%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221121092641469.png\" alt=\"image-20221121092641469\"></p>\n<p>百度他找到了这个网站搜索 redrock 得到了</p>\n<p><img src=\"C:%5CUsers%5CLenovo%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221121092709528.png\" alt=\"image-20221121092709528\"></p>\n<h3 id=\"pwn\"><a class=\"markdownIt-Anchor\" href=\"#pwn\">#</a> pwn</h3>\n<p>一口一个 flag</p>\n<p>既然都说 nc 一下下那就 nc 一下吧</p>\n<p><img src=\"C:%5CUsers%5CLenovo%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221121093425936.png\" alt=\"image-20221121093425936\"></p>\n<p>猫猫 flag</p>\n<p><img src=\"C:%5CUsers%5CLenovo%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221121093520659.png\" alt=\"image-20221121093520659\"></p>\n<p>还是要 nc</p>\n<p><img src=\"C:%5CUsers%5CLenovo%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221121093653396.png\" alt=\"image-20221121093653396\"></p>\n<p>cat flag 得到 redrock</p>\n<p>(重头戏即将到来…)</p>\n<h2 id=\"change_array_val\"><a class=\"markdownIt-Anchor\" href=\"#change_array_val\">#</a> change_array_val</h2>\n<p><img src=\"C:%5CUsers%5CLenovo%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221121093913349.png\" alt=\"image-20221121093913349\"></p>\n<p>改一个数据就能拿到它，but 先看一下它是 64 还是 32</p>\n<p><img src=\"C:%5CUsers%5CLenovo%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221121094045626.png\" alt=\"image-20221121094045626\"></p>\n<p>得到它是 64 位的，用 IDA64 打开它</p>\n<p><img src=\"C:%5CUsers%5CLenovo%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221121094228964.png\" alt=\"image-20221121094228964\"></p>\n<p>进入 main 函数，发现要运行 vuln 的函数，点进去后</p>\n<p><img src=\"C:%5CUsers%5CLenovo%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221121094303067.png\" alt=\"image-20221121094303067\"></p>\n<p>看到</p>\n<p>if ( dword_4094 == 250 )<br>\nsystem(“/bin/sh”);</p>\n<p>知道如果 dword_4094==250 的时候就能建立起连接，则开始写 py 程序</p>\n<p>看到要输入一个 var, 则可以从他入手进行栈溢出，点进去发现</p>\n<p><img src=\"C:%5CUsers%5CLenovo%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221121094710661.png\" alt=\"image-20221121094710661\"></p>\n<p>隔了 13*4 个字节，即输入 52 个数据后就可以栈溢出，栈溢出后输入的值是 250，得到程序如下</p>\n<p><img src=\"C:%5CUsers%5CLenovo%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221121094830156.png\" alt=\"image-20221121094830156\"></p>\n<p>运行该 py 程序，成功 get shell</p>\n<h2 id=\"拯救纳西妲\"><a class=\"markdownIt-Anchor\" href=\"#拯救纳西妲\">#</a> 拯救纳西妲</h2>\n<p>根据题意，知道要把 key 放到 system 里，即 system 里的东西要改成 key</p>\n<p>找到 key 和 system 的地址</p>\n<p><img src=\"C:%5CUsers%5CLenovo%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221121122829850.png\" alt=\"image-20221121122829850\"></p>\n<p><img src=\"C:%5CUsers%5CLenovo%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221121122904734.png\" alt=\"image-20221121122904734\"></p>\n<p>决定了决定溢出数为 0x6C+4<img src=\"C:%5CUsers%5CLenovo%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221121123041730.png\" alt=\"image-20221121123041730\"></p>\n<p>+4 是因为该文件为 32 位的 elf</p>\n<p>进入 system 后，将函数返回的地址换成 key 后运行得到 flag</p>\n<p><img src=\"C:%5CUsers%5CLenovo%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221121130910590.png\" alt=\"image-20221121130910590\"></p>\n<p><img src=\"C:%5CUsers%5CLenovo%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221124235837674.png\" alt=\"image-20221124235837674\"></p>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2023/03/10/hello-world/",
            "url": "http://example.com/2023/03/10/hello-world/",
            "title": "Hello World",
            "date_published": "2023-03-10T07:31:45.921Z",
            "content_html": "<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n",
            "tags": []
        }
    ]
}